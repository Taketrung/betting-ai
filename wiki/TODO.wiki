  * Optimise reading market data files using java.nio and scala Streams - http://www.jayconrod.com/cgi/view_post.py?27

  * Replace File with EventStream trait (def runSimulation(marketData: Map[Long, File], trader: ITrader, p: (Int) => Unit))

   * Make sure that Market Simulator works correctly for multiple traders. Analyse on paper one of unit tests.

   * Create unit test for Simulator Report.
   
   * Create Simulator companion and add a factory method to initialise default Simulator. Then find and refactor all places where Simulator is created manually. 

   * Find duplicate time event (esper).

   * Create Abstract Test Runner for co-evolution tests.

   * Analyse memory usage for PriceSlopeTest and fix memory leak.

   * Test co evolution for ifwinlosedelta trader

   * Test co evolution for price + priceslope + tradedvolume variables
   